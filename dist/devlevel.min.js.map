{"version":3,"file":"devlevel.min.js","sources":["../src/index.js"],"sourcesContent":["const toStr = Object.prototype.toString\r\nconst conditions = {}\r\nconst UNDEF = 'undefined',\r\n\tNUL = 'null',\r\n\tINF = 'Infinity',\r\n\tARR = 'Array'\r\nconst byteArray = ['Uint8Array', 'Int8Array']\r\nconst shortArray = ['Uint16Array', 'Int16Array']\r\nconst intArray = ['Uint32Array', 'Int32Array']\r\nconst floatArray = ['Float32Array', 'Float64Array']\r\nconst arrayBuffer = 'ArrayBuffer'\r\nconst typedArrays = byteArray.concat(shortArray).concat(intArray).concat(floatArray).concat(arrayBuffer)\r\n\r\naddTypeCon({\r\n\tbool: 'Boolean',\r\n\tnum: 'Number',\r\n\tstr: 'String',\r\n\tfn: 'Function',\r\n\tdate: 'Date',\r\n\treg: 'RegExp',\r\n\tobj: 'Object',\r\n\terr: 'Error',\r\n\tarray: ARR,\r\n\tarrayLike: [\r\n\t\t[ARR, 'Arguments', 'NodeList'].concat(typedArrays)\r\n\t],\r\n\tbyteArray: [byteArray],\r\n\tshortArray: [shortArray],\r\n\tintArray: [intArray],\r\n\tfloatArray: [floatArray],\r\n\ttypedArrays: [typedArrays]\r\n})\r\neach(typedArrays, t => addTypeCon(reFirst(t), t))\r\naddValueCon({\r\n\tnil: [\r\n\t\t[UNDEF, NUL]\r\n\t],\r\n\tnul: NUL,\r\n\tdef: [UNDEF, 1, 1],\r\n\tundef: [UNDEF, 0, 1],\r\n\tNaN: ['o', 1],\r\n\tinfinite: [INF, 0, 1]\r\n})\r\naddCon({\r\n\tfinite: [\r\n\t\t['o'], o => o === o && o !== Infinity && toStr.call(o) === '[object Number]'\r\n\t],\r\n\teq: [\r\n\t\t['a', 'b'], (a, b) => a === b || (a !== a && b !== b)\r\n\t],\r\n\tnotEq: [\r\n\t\t['a', 'b'], (a, b) => a !== b && (a === a || b === b)\r\n\t]\r\n})\r\n\r\nfunction addTypeCon(name, values, notEq, notMakeNot) {\r\n\t_addCon(arguments, addTypeCon, () => addEqCon(name, [toStr], ['o'], '$0.call(o)', map(arrayVal(values), v => `'[object ${v}]'`), notEq, notMakeNot))\r\n}\r\n\r\nfunction addValueCon(name, values, notEq, notMakeNot) {\r\n\t_addCon(arguments, addValueCon, () => addEqCon(name, undefined, ['o'], 'o', values, notEq, notMakeNot))\r\n}\r\n\r\nfunction _addCon(args, thisCb, cb) {\r\n\targs.length === 1 ? each(args[0], (v, n) => thisCb.apply(null, [n].concat(v))) : cb()\r\n}\r\n\r\nfunction addEqCon(name, injects = [], args, conCode, values, notEq, notMakeNot) {\r\n\tvalues = arrayVal(values)\r\n\tconst params = map(injects, (v, i) => '$' + i)\r\n\r\n\tparams.push(`return function(${args.join(',')}){\r\n${values.length > 1 ? `switch(${conCode}){\r\ncase ${values.join(':\\n\\t\\tcase ')}: return ${!notEq};\r\ndefault: return ${!!notEq};\r\n}`: `return (${conCode})${notEq ? '!': '='}==${values[0]};`}\r\n    }`)\r\n\r\n\taddCon(name, args, Function.apply(Function, params).apply(null, injects))\r\n\tif (!notMakeNot)\r\n\t\taddEqCon('not' + reFirst(name, 1), injects, args, conCode, values, !notEq, 1)\r\n}\r\n\r\nfunction addCon(name, args, fn) {\r\n\tif (arguments.length === 1)\r\n\t\teach(name, (v, n) => {\r\n\t\t\tconditions[n] = v\r\n\t\t})\r\n\telse\r\n\t\tconditions[name] = [args, fn]\r\n}\r\n\r\nfunction _if(condition, callback, isNot) {\r\n\tconst args = condition[0]\r\n\treturn new Function('condition', 'callback', 'slice', `return function(${args.join(',')}){\r\nif(${isNot ? '!' : ''}condition(${args.join(',')}))\r\n    callback(slice(arguments, ${args.length}));\r\n}`)(condition[1], callback, sliceArgs)\r\n}\r\n\r\nfunction assignCons(obj, callback, isNot) {\r\n\tfor (let name in conditions)\r\n\t\tobj[name] = _if(conditions[name], callback, isNot)\r\n\treturn obj\r\n}\r\n\r\nfunction callBy(condition, cb) {\r\n\tconst len = arguments.length\r\n\tif (len > 1) condition && cb()\r\n\telse if (len) condition()\r\n}\r\nexport function exception(error) {\r\n\tif (typeof error === 'function')\r\n\t\terror = error()\r\n\tif (error instanceof Error) throw error\r\n\tthrow new Error(error)\r\n}\r\n\r\nexport function assert(condition, error) {\r\n\tif (!condition) exception(error)\r\n}\r\nassignCons(assert, (args) => exception(args[0]), 1)\r\nassert.by = callBy\r\n\r\n\r\nlet currentLevel = 1\r\nconst logs = []\r\nconst logMap = {}\r\n\r\nexport const debug = createLog('debug', 0)\r\nexport const info = createLog('info', 1)\r\nexport const warn = createLog('warn', 2)\r\nexport const error = createLog('error', 3)\r\nexport {\r\n\tlogMap as log\r\n}\r\n\r\nfunction createLog(name, level) {\r\n\tfunction log() {\r\n\t\tlevel >= currentLevel && log.print.apply(this, arguments)\r\n\t}\r\n\tlog.level = level\r\n\tlog.methods = getLogMethods(name, log)\r\n\tlogs[level] = log\r\n\tlogMap[name] = log\r\n\treturn bindLog(log)\r\n}\r\n\r\nfunction getLogMethods(name, log) {\r\n\tconst mark = `[${name}]: `\r\n\treturn assignCons({\r\n\t\tby: callBy,\r\n\t\twhen(condition) {\r\n\t\t\tcondition && log.print.apply(log, sliceArgs(arguments, 1))\r\n\t\t},\r\n\t\tprint(msg) {\r\n\t\t\tif (arguments.length) {\r\n\t\t\t\tconst args = map(arguments, v => v)\r\n\t\t\t\tif (typeof msg === 'string') {\r\n\t\t\t\t\targs[0] = mark + args[0]\r\n\t\t\t\t} else {\r\n\t\t\t\t\targs.unshift(mark)\r\n\t\t\t\t}\r\n\t\t\t\tlog.__print(args, name)\r\n\t\t\t}\r\n\t\t}\r\n\t}, args => log.print.apply(log, args))\r\n}\r\n\r\nfunction empty() {}\r\n\r\nfunction bindLog(log) {\r\n\tconst {\r\n\t\tlevel,\r\n\t\tmethods\r\n\t} = log\r\n\tfor (let method in methods)\r\n\t\tlog[method] = level < currentLevel ? empty : methods[method]\r\n\treturn log\r\n}\r\n\r\nexport function setLogLevel(level) {\r\n\tconst log = logMap[level]\r\n\tassert(log, 'invalid log level: ' + level)\r\n\tlevel = log.level\r\n\tif (level !== currentLevel) {\r\n\t\tcurrentLevel = level\r\n\t\teach(logs, bindLog)\r\n\t}\r\n\r\n}\r\n\r\nexport function setLogConsole(console, applyArgs) {\r\n\teach(logs, log => {\r\n\t\tlog.__print = applyArgs ? (args, name) => {\r\n\t\t\tconsole[name].apply(console, args)\r\n\t\t} : (args, name) => console[name](args, name)\r\n\t})\r\n}\r\nexport function isLog(level) {\r\n\tconst log = logMap[level]\r\n\tassert(log, 'invalid log level: ' + level)\r\n\treturn log.level >= currentLevel\r\n}\r\n\r\nif (!console) console = { log() {} }\r\nif (!console.info) console.info = console.log\r\nsetLogConsole(console, 1)\r\n\r\nexport function sliceArgs(args, offset) {\r\n\tlet len = args.length\r\n\tconst arr = new Array(len - offset)\r\n\twhile (len-- > offset)\r\n\t\tarr[len - offset] = args[len]\r\n\treturn arr\r\n}\r\n\r\nexport function each(obj, cb) {\r\n\tif (obj instanceof Array) {\r\n\t\tvar i = obj.length\r\n\t\twhile (i--) cb(obj[i], i)\r\n\t} else {\r\n\t\tfor (let key in obj)\r\n\t\t\tcb(obj[key], key)\r\n\t}\r\n}\r\n\r\nexport function map(arr, cb) {\r\n\tlet i = arr.length,\r\n\t\tret = new Array(i)\r\n\twhile (i--)\r\n\t\tret[i] = cb(arr[i], i)\r\n\treturn ret\r\n}\r\n\r\nexport function reFirst(str, upper) {\r\n\treturn str.replace(/^[a-zA-Z]/, upper ? o => o.toUpperCase() : o => o.toLowerCase())\r\n}\r\n\r\nexport function arrayVal(val) {\r\n\treturn val instanceof Array ? val : [val]\r\n}"],"names":["toStr","Object","prototype","toString","conditions","UNDEF","ARR","byteArray","shortArray","intArray","floatArray","typedArrays","concat","addTypeCon","each","reFirst","t","addValueCon","name","values","notEq","notMakeNot","arguments","addEqCon","undefined","addCon","o","Infinity","call","a","b","map","arrayVal","v","_addCon","args","thisCb","cb","length","n","apply","injects","conCode","params","i","push","join","Function","fn","_if","condition","callback","isNot","sliceArgs","assignCons","obj","callBy","len","exception","error","Error","assert","by","currentLevel","logs","logMap","debug","createLog","info","warn","level","log","print","this","methods","mark","msg","unshift","__print","getLogMethods","bindLog","empty","method","setLogConsole","console","applyArgs","offset","arr","Array","key","ret","str","upper","replace","toUpperCase","toLowerCase","val"],"mappings":"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"}