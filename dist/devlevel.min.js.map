{"version":3,"file":"devlevel.min.js","sources":["../src/index.js"],"sourcesContent":["const toStr = Object.prototype.toString\nconst conditions = {}\nconst UNDEF = 'undefined',\n\tNUL = 'null',\n\tINF = 'Infinity',\n\tARR = 'Array'\nconst byteArray = ['Uint8Array', 'Int8Array']\nconst shortArray = ['Uint16Array', 'Int16Array']\nconst intArray = ['Uint32Array', 'Int32Array']\nconst floatArray = ['Float32Array', 'Float64Array']\nconst arrayBuffer = 'ArrayBuffer'\nconst typedArrays = byteArray.concat(shortArray).concat(intArray).concat(floatArray).concat(arrayBuffer)\n\naddTypeCon({\n\tbool: 'Boolean',\n\tnum: 'Number',\n\tstr: 'String',\n\tfn: 'Function',\n\tdate: 'Date',\n\treg: 'RegExp',\n\tobj: 'Object',\n\terr: 'Error',\n\tarray: ARR,\n\tarrayLike: [\n\t\t[ARR, 'Arguments', 'NodeList'].concat(typedArrays)\n\t],\n\tbyteArray: [byteArray],\n\tshortArray: [shortArray],\n\tintArray: [intArray],\n\tfloatArray: [floatArray],\n\ttypedArrays: [typedArrays]\n})\neach(typedArrays, t => addTypeCon(reFirst(t), t))\naddValueCon({\n\tnil: [\n\t\t[UNDEF, NUL]\n\t],\n\tnul: NUL,\n\tdef: [UNDEF, 1, 1],\n\tundef: [UNDEF, 0, 1],\n\tNaN: ['o', 1],\n\tinfinite: [INF, 0, 1]\n})\naddCon({\n\tfinite: [\n\t\t['o'], o => o === o && o !== Infinity && toStr.call(o) === '[object Number]'\n\t],\n\teq: [\n\t\t['a', 'b'], (a, b) => a === b || (a !== a && b !== b)\n\t],\n\tnotEq: [\n\t\t['a', 'b'], (a, b) => a !== b && (a === a || b === b)\n\t]\n})\n\nfunction addTypeCon(name, values, notEq, notMakeNot) {\n\t_addCon(arguments, addTypeCon, () => addEqCon(name, [toStr], ['o'], '$0.call(o)', map(arrayVal(values), v => `'[object ${v}]'`), notEq, notMakeNot))\n}\n\nfunction addValueCon(name, values, notEq, notMakeNot) {\n\t_addCon(arguments, addValueCon, () => addEqCon(name, undefined, ['o'], 'o', values, notEq, notMakeNot))\n}\n\nfunction _addCon(args, thisCb, cb) {\n\targs.length === 1 ? each(args[0], (v, n) => thisCb.apply(null, [n].concat(v))) : cb()\n}\n\nfunction addEqCon(name, injects = [], args, conCode, values, notEq, notMakeNot) {\n\tvalues = arrayVal(values)\n\tconst params = map(injects, (v, i) => '$' + i)\n\n\tparams.push(`return function(${args.join(',')}){\n${values.length > 1 ? `switch(${conCode}){\ncase ${values.join(':\\n\\t\\tcase ')}: return ${!notEq};\ndefault: return ${!!notEq};\n}`: `return (${conCode})${notEq ? '!': '='}==${values[0]};`}\n    }`)\n\n\taddCon(name, args, Function.apply(Function, params).apply(null, injects))\n\tif (!notMakeNot)\n\t\taddEqCon('not' + reFirst(name, 1), injects, args, conCode, values, !notEq, 1)\n}\n\nfunction addCon(name, args, fn) {\n\tif (arguments.length === 1)\n\t\teach(name, (v, n) => {\n\t\t\tconditions[n] = v\n\t\t})\n\telse\n\t\tconditions[name] = [args, fn]\n}\n\nfunction _if(condition, callback, isNot) {\n\tconst args = condition[0]\n\treturn new Function('condition', 'callback', 'slice', `return function(${args.join(',')}){\nif(${isNot ? '!' : ''}condition(${args.join(',')}))\n    callback(slice(arguments, ${args.length}));\n}`)(condition[1], callback, sliceArgs)\n}\n\nfunction assignCons(obj, callback, isNot) {\n\tfor (let name in conditions)\n\t\tobj[name] = _if(conditions[name], callback, isNot)\n\treturn obj\n}\n\nfunction callBy(condition, cb) {\n\tconst len = arguments.length\n\tif (len > 1) condition && cb()\n\telse if (len) condition()\n}\nexport function exception(error) {\n\tif (typeof error === 'function')\n\t\terror = error()\n\tif (error instanceof Error) throw error\n\tthrow new Error(error)\n}\n\nexport function assert(condition, error) {\n\tif (!condition) exception(error)\n}\nassignCons(assert, (args) => exception(args[0]), 1)\nassert.by = callBy\n\n\nlet currentLevel = 1\nconst logs = []\nconst logMap = {}\n\nexport const debug = createLog('debug', 0)\nexport const info = createLog('info', 1)\nexport const warn = createLog('warn', 2)\nexport const error = createLog('error', 3)\nexport {\n\tlogMap as log\n}\n\nfunction createLog(name, level) {\n\tfunction log() {\n\t\tlevel >= currentLevel && log.print.apply(this, arguments)\n\t}\n\tlog.level = level\n\tlog.methods = getLogMethods(name, log)\n\tlogs[level] = log\n\tlogMap[name] = log\n\treturn bindLog(log)\n}\n\nfunction getLogMethods(name, log) {\n\tconst mark = `[${name}]: `\n\treturn assignCons({\n\t\tby: callBy,\n\t\twhen(condition) {\n\t\t\tcondition && log.print.apply(log, sliceArgs(arguments, 1))\n\t\t},\n\t\tprint(msg) {\n\t\t\tif (arguments.length) {\n\t\t\t\tconst args = map(arguments, v => v)\n\t\t\t\tif (typeof msg === 'string') {\n\t\t\t\t\targs[0] = mark + args[0]\n\t\t\t\t} else {\n\t\t\t\t\targs.unshift(mark)\n\t\t\t\t}\n\t\t\t\tlog.__print(args, name)\n\t\t\t}\n\t\t}\n\t}, args => log.print.apply(log, args))\n}\n\nfunction empty() {}\n\nfunction bindLog(log) {\n\tconst {\n\t\tlevel,\n\t\tmethods\n\t} = log\n\tfor (let method in methods)\n\t\tlog[method] = level < currentLevel ? empty : methods[method]\n\treturn log\n}\n\nexport function setLogLevel(level) {\n\tconst log = logMap[level]\n\tassert(log, 'invalid log level: ' + level)\n\tlevel = log.level\n\tif (level !== currentLevel) {\n\t\tcurrentLevel = level\n\t\teach(logs, bindLog)\n\t}\n\n}\n\nexport function setLogConsole(console, applyArgs) {\n\teach(logs, log => {\n\t\tlog.__print = applyArgs ? (args, name) => {\n\t\t\tconsole[name].apply(console, args)\n\t\t} : (args, name) => console[name](args, name)\n\t})\n}\nexport function isLog(level) {\n\tconst log = logMap[level]\n\tassert(log, 'invalid log level: ' + level)\n\treturn log.level >= currentLevel\n}\n\nif (!console) console = { log() {} }\nif (!console.info) console.info = console.log\nsetLogConsole(console, 1)\n\nexport function sliceArgs(args, offset) {\n\tlet len = args.length\n\tconst arr = new Array(len - offset)\n\twhile (len-- > offset)\n\t\tarr[len - offset] = args[len]\n\treturn arr\n}\n\nexport function each(obj, cb) {\n\tif (obj instanceof Array) {\n\t\tvar i = obj.length\n\t\twhile (i--) cb(obj[i], i)\n\t} else {\n\t\tfor (let key in obj)\n\t\t\tcb(obj[key], key)\n\t}\n}\n\nexport function map(arr, cb) {\n\tlet i = arr.length,\n\t\tret = new Array(i)\n\twhile (i--)\n\t\tret[i] = cb(arr[i], i)\n\treturn ret\n}\n\nexport function reFirst(str, upper) {\n\treturn str.replace(/^[a-zA-Z]/, upper ? o => o.toUpperCase() : o => o.toLowerCase())\n}\n\nexport function arrayVal(val) {\n\treturn val instanceof Array ? val : [val]\n}\n"],"names":["toStr","Object","prototype","toString","conditions","UNDEF","NUL","ARR","byteArray","shortArray","intArray","floatArray","typedArrays","concat","addTypeCon","name","values","notEq","notMakeNot","arguments","addEqCon","map","arrayVal","v","_addCon","args","thisCb","cb","length","each","n","apply","injects","conCode","params","i","push","join","Function","reFirst","addCon","fn","assignCons","obj","callback","isNot","condition","sliceArgs","callBy","len","exception","error","Error","assert","t","addValueCon","undefined","o","Infinity","call","a","b","by","currentLevel","logs","logMap","debug","createLog","info","warn","level","log","print","this","methods","getLogMethods","mark","msg","unshift","__print","bindLog","empty","method","setLogConsole","console","applyArgs","offset","arr","Array","key","ret","str","upper","replace","toUpperCase","toLowerCase","val","setLogLevel","isLog"],"mappings":"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"}