{"version":3,"file":"devlevel.js","sources":["../src/index.js"],"sourcesContent":["const toStr = Object.prototype.toString\nconst conditions = {}\nconst UNDEF = 'undefined',\n\tNUL = 'null',\n\tINF = 'Infinity',\n\tARR = 'Array'\nconst byteArray = ['Uint8Array', 'Int8Array']\nconst shortArray = ['Uint16Array', 'Int16Array']\nconst intArray = ['Uint32Array', 'Int32Array']\nconst floatArray = ['Float32Array', 'Float64Array']\nconst arrayBuffer = 'ArrayBuffer'\nconst typedArrays = byteArray.concat(shortArray).concat(intArray).concat(floatArray).concat(arrayBuffer)\n\naddTypeCon({\n\tbool: 'Boolean',\n\tnum: 'Number',\n\tstr: 'String',\n\tfn: 'Function',\n\tdate: 'Date',\n\treg: 'RegExp',\n\tobj: 'Object',\n\terr: 'Error',\n\tarray: ARR,\n\tarrayLike: [\n\t\t[ARR, 'Arguments', 'NodeList'].concat(typedArrays)\n\t],\n\tbyteArray: [byteArray],\n\tshortArray: [shortArray],\n\tintArray: [intArray],\n\tfloatArray: [floatArray],\n\ttypedArrays: [typedArrays]\n})\neach(typedArrays, t => addTypeCon(reFirst(t), t))\naddValueCon({\n\tnil: [\n\t\t[UNDEF, NUL]\n\t],\n\tnul: NUL,\n\tdef: [UNDEF, 1, 1],\n\tundef: [UNDEF, 0, 1],\n\tNaN: ['o', 1],\n\tinfinite: [INF, 0, 1]\n})\naddCon({\n\tfinite: [\n\t\t['o'], o => o === o && o !== Infinity && toStr.call(o) === '[object Number]'\n\t],\n\teq: [\n\t\t['a', 'b'], (a, b) => a === b || (a !== a && b !== b)\n\t],\n\tnotEq: [\n\t\t['a', 'b'], (a, b) => a !== b && (a === a || b === b)\n\t]\n})\n\nfunction addTypeCon(name, values, notEq, notMakeNot) {\n\t_addCon(arguments, addTypeCon, () => addEqCon(name, [toStr], ['o'], '$0.call(o)', map(arrayVal(values), v => `'[object ${v}]'`), notEq, notMakeNot))\n}\n\nfunction addValueCon(name, values, notEq, notMakeNot) {\n\t_addCon(arguments, addValueCon, () => addEqCon(name, undefined, ['o'], 'o', values, notEq, notMakeNot))\n}\n\nfunction _addCon(args, thisCb, cb) {\n\targs.length === 1 ? each(args[0], (v, n) => thisCb.apply(null, [n].concat(v))) : cb()\n}\n\nfunction addEqCon(name, injects = [], args, conCode, values, notEq, notMakeNot) {\n\tvalues = arrayVal(values)\n\tconst params = map(injects, (v, i) => '$' + i)\n\n\tparams.push(`return function(${args.join(',')}){\n${values.length > 1 ? `switch(${conCode}){\ncase ${values.join(':\\n\\t\\tcase ')}: return ${!notEq};\ndefault: return ${!!notEq};\n}`: `return (${conCode})${notEq ? '!': '='}==${values[0]};`}\n    }`)\n\n\taddCon(name, args, Function.apply(Function, params).apply(null, injects))\n\tif (!notMakeNot)\n\t\taddEqCon('not' + reFirst(name, 1), injects, args, conCode, values, !notEq, 1)\n}\n\nfunction addCon(name, args, fn) {\n\tif (arguments.length === 1)\n\t\teach(name, (v, n) => {\n\t\t\tconditions[n] = v\n\t\t})\n\telse\n\t\tconditions[name] = [args, fn]\n}\n\nfunction _if(condition, callback, isNot) {\n\tconst args = condition[0]\n\treturn new Function('condition', 'callback', 'slice', `return function(${args.join(',')}){\nif(${isNot ? '!' : ''}condition(${args.join(',')}))\n    callback(slice(arguments, ${args.length}));\n}`)(condition[1], callback, sliceArgs)\n}\n\nfunction assignCons(obj, callback, isNot) {\n\tfor (let name in conditions)\n\t\tobj[name] = _if(conditions[name], callback, isNot)\n\treturn obj\n}\n\nfunction callBy(condition, cb) {\n\tconst len = arguments.length\n\tif (len > 1) condition && cb()\n\telse if (len) condition()\n}\nexport function exception(error) {\n\tif (typeof error === 'function')\n\t\terror = error()\n\tif (error instanceof Error) throw error\n\tthrow new Error(error)\n}\n\nexport function assert(condition, error) {\n\tif (!condition) exception(error)\n}\nassignCons(assert, (args) => exception(args[0]), 1)\nassert.by = callBy\n\n\nlet currentLevel = 1\nconst logs = []\nconst logMap = {}\n\nexport const debug = createLog('debug', 0)\nexport const info = createLog('info', 1)\nexport const warn = createLog('warn', 2)\nexport const error = createLog('error', 3)\nexport {\n\tlogMap as log\n}\n\nfunction createLog(name, level) {\n\tfunction log() {\n\t\tlevel >= currentLevel && log.print.apply(this, arguments)\n\t}\n\tlog.level = level\n\tlog.methods = getLogMethods(name, log)\n\tlogs[level] = log\n\tlogMap[name] = log\n\treturn bindLog(log)\n}\n\nfunction getLogMethods(name, log) {\n\tconst mark = `[${name}]: `\n\treturn assignCons({\n\t\tby: callBy,\n\t\twhen(condition) {\n\t\t\tcondition && log.print.apply(log, sliceArgs(arguments, 1))\n\t\t},\n\t\tprint(msg) {\n\t\t\tif (arguments.length) {\n\t\t\t\tconst args = map(arguments, v => v)\n\t\t\t\tif (typeof msg === 'string') {\n\t\t\t\t\targs[0] = mark + args[0]\n\t\t\t\t} else {\n\t\t\t\t\targs.unshift(mark)\n\t\t\t\t}\n\t\t\t\tlog.__print(args, name)\n\t\t\t}\n\t\t}\n\t}, args => log.print.apply(log, args))\n}\n\nfunction empty() {}\n\nfunction bindLog(log) {\n\tconst {\n\t\tlevel,\n\t\tmethods\n\t} = log\n\tfor (let method in methods)\n\t\tlog[method] = level < currentLevel ? empty : methods[method]\n\treturn log\n}\n\nexport function setLogLevel(level) {\n\tconst log = logMap[level]\n\tassert(log, 'invalid log level: ' + level)\n\tlevel = log.level\n\tif (level !== currentLevel) {\n\t\tcurrentLevel = level\n\t\teach(logs, bindLog)\n\t}\n\n}\n\nexport function setLogConsole(console, applyArgs) {\n\teach(logs, log => {\n\t\tlog.__print = applyArgs ? (args, name) => {\n\t\t\tconsole[name].apply(console, args)\n\t\t} : (args, name) => console[name](args, name)\n\t})\n}\nexport function isLog(level) {\n\tconst log = logMap[level]\n\tassert(log, 'invalid log level: ' + level)\n\treturn log.level >= currentLevel\n}\n\nif (!console) console = { log() {} }\nif (!console.info) console.info = console.log\nsetLogConsole(console, 1)\n\nexport function sliceArgs(args, offset) {\n\tlet len = args.length\n\tconst arr = new Array(len - offset)\n\twhile (len-- > offset)\n\t\tarr[len - offset] = args[len]\n\treturn arr\n}\n\nexport function each(obj, cb) {\n\tif (obj instanceof Array) {\n\t\tvar i = obj.length\n\t\twhile (i--) cb(obj[i], i)\n\t} else {\n\t\tfor (let key in obj)\n\t\t\tcb(obj[key], key)\n\t}\n}\n\nexport function map(arr, cb) {\n\tlet i = arr.length,\n\t\tret = new Array(i)\n\twhile (i--)\n\t\tret[i] = cb(arr[i], i)\n\treturn ret\n}\n\nexport function reFirst(str, upper) {\n\treturn str.replace(/^[a-zA-Z]/, upper ? o => o.toUpperCase() : o => o.toLowerCase())\n}\n\nexport function arrayVal(val) {\n\treturn val instanceof Array ? val : [val]\n}\n"],"names":["toStr","Object","prototype","toString","conditions","UNDEF","NUL","INF","ARR","byteArray","shortArray","intArray","floatArray","arrayBuffer","typedArrays","concat","addTypeCon","bool","num","str","fn","date","reg","obj","err","array","arrayLike","each","reFirst","t","addValueCon","nil","nul","def","undef","NaN","infinite","addCon","finite","o","Infinity","call","eq","a","b","notEq","name","values","notMakeNot","_addCon","arguments","addEqCon","map","arrayVal","v","undefined","args","thisCb","cb","length","n","apply","injects","conCode","params","i","push","join","Function","_if","condition","callback","isNot","sliceArgs","assignCons","callBy","len","exception","error","Error","assert","by","currentLevel","logs","logMap","debug","createLog","info","warn","level","log","print","methods","getLogMethods","bindLog","mark","when","msg","unshift","__print","empty","method","setLogLevel","setLogConsole","console","applyArgs","isLog","offset","arr","Array","key","ret","upper","replace","toUpperCase","toLowerCase","val"],"mappings":"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"}