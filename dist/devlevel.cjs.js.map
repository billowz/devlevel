{"version":3,"file":"devlevel.cjs.js","sources":["../src/index.js"],"sourcesContent":["const toStr = Object.prototype.toString\nconst conditions = {}\nconst UNDEF = 'undefined',\n\tNUL = 'null',\n\tINF = 'Infinity',\n\tARR = 'Array'\nconst byteArray = ['Uint8Array', 'Int8Array']\nconst shortArray = ['Uint16Array', 'Int16Array']\nconst intArray = ['Uint32Array', 'Int32Array']\nconst floatArray = ['Float32Array', 'Float64Array']\nconst arrayBuffer = 'ArrayBuffer'\nconst typedArrays = byteArray.concat(shortArray).concat(intArray).concat(floatArray).concat(arrayBuffer)\n\naddTypeCon({\n\tbool: 'Boolean',\n\tnum: 'Number',\n\tstr: 'String',\n\tfn: 'Function',\n\tdate: 'Date',\n\treg: 'RegExp',\n\tobj: 'Object',\n\terr: 'Error',\n\tarray: ARR,\n\tarrayLike: [\n\t\t[ARR, 'Arguments', 'NodeList'].concat(typedArrays)\n\t],\n\tbyteArray: [byteArray],\n\tshortArray: [shortArray],\n\tintArray: [intArray],\n\tfloatArray: [floatArray],\n\ttypedArrays: [typedArrays]\n})\neach(typedArrays, t => addTypeCon(reFirst(t), t))\naddValueCon({\n\tnil: [\n\t\t[UNDEF, NUL]\n\t],\n\tnul: NUL,\n\tdef: [UNDEF, 1, 1],\n\tundef: [UNDEF, 0, 1],\n\tNaN: ['o', 1],\n\tinfinite: [INF, 0, 1]\n})\naddCon({\n\tfinite: [\n\t\t['o'], o => o === o && o !== Infinity && toStr.call(o) === '[object Number]'\n\t],\n\teq: [\n\t\t['a', 'b'], (a, b) => a === b || (a !== a && b !== b)\n\t],\n\tnotEq: [\n\t\t['a', 'b'], (a, b) => a !== b && (a === a || b === b)\n\t]\n})\n\nfunction addTypeCon(name, values, notEq, notMakeNot) {\n\t_addCon(arguments, addTypeCon, () => addEqCon(name, [toStr], ['o'], '$0.call(o)', map(arrayVal(values), v => `'[object ${v}]'`), notEq, notMakeNot))\n}\n\nfunction addValueCon(name, values, notEq, notMakeNot) {\n\t_addCon(arguments, addValueCon, () => addEqCon(name, undefined, ['o'], 'o', values, notEq, notMakeNot))\n}\n\nfunction _addCon(args, thisCb, cb) {\n\targs.length === 1 ? each(args[0], (v, n) => thisCb.apply(null, [n].concat(v))) : cb()\n}\n\nfunction addEqCon(name, injects = [], args, conCode, values, notEq, notMakeNot) {\n\tvalues = arrayVal(values)\n\tconst params = map(injects, (v, i) => '$' + i)\n\n\tparams.push(`return function(${args.join(',')}){\n${values.length > 1 ? `switch(${conCode}){\ncase ${values.join(':\\n\\t\\tcase ')}: return ${!notEq};\ndefault: return ${!!notEq};\n}`: `return (${conCode})${notEq ? '!': '='}==${values[0]};`}\n    }`)\n\n\taddCon(name, args, Function.apply(Function, params).apply(null, injects))\n\tif (!notMakeNot)\n\t\taddEqCon('not' + reFirst(name, 1), injects, args, conCode, values, !notEq, 1)\n}\n\nfunction addCon(name, args, fn) {\n\tif (arguments.length === 1)\n\t\teach(name, (v, n) => {\n\t\t\tconditions[n] = v\n\t\t})\n\telse\n\t\tconditions[name] = [args, fn]\n}\n\nfunction _if(condition, callback, isNot) {\n\tconst args = condition[0]\n\treturn new Function('condition', 'callback', 'slice', `return function(${args.join(',')}){\nif(${isNot ? '!' : ''}condition(${args.join(',')}))\n    callback(slice(arguments, ${args.length}));\n}`)(condition[1], callback, sliceArgs)\n}\n\nfunction assignCons(obj, callback, isNot) {\n\tfor (let name in conditions)\n\t\tobj[name] = _if(conditions[name], callback, isNot)\n\treturn obj\n}\n\nfunction callBy(condition, cb) {\n\tconst len = arguments.length\n\tif (len > 1) condition && cb()\n\telse if (len) condition()\n}\nexport function exception(error) {\n\tif (typeof error === 'function')\n\t\terror = error()\n\tif (error instanceof Error) throw error\n\tthrow new Error(error)\n}\n\nexport function assert(condition, error) {\n\tif (!condition) exception(error)\n}\nassignCons(assert, (args) => exception(args[0]), 1)\nassert.by = callBy\n\n\nlet currentLevel = 1\nconst logs = []\nconst logMap = {}\n\nexport const debug = createLog('debug', 0)\nexport const info = createLog('info', 1)\nexport const warn = createLog('warn', 2)\nexport const error = createLog('error', 3)\nexport {\n\tlogMap as log\n}\n\nfunction createLog(name, level) {\n\tfunction log() {\n\t\tlevel >= currentLevel && log.print.apply(this, arguments)\n\t}\n\tlog.level = level\n\tlog.methods = getLogMethods(name, log)\n\tlogs[level] = log\n\tlogMap[name] = log\n\treturn bindLog(log)\n}\n\nfunction getLogMethods(name, log) {\n\tconst mark = `[${name}]: `\n\treturn assignCons({\n\t\tby: callBy,\n\t\twhen(condition) {\n\t\t\tcondition && log.print.apply(log, sliceArgs(arguments, 1))\n\t\t},\n\t\tprint(msg) {\n\t\t\tif (arguments.length) {\n\t\t\t\tconst args = map(arguments, v => v)\n\t\t\t\tif (typeof msg === 'string') {\n\t\t\t\t\targs[0] = mark + args[0]\n\t\t\t\t} else {\n\t\t\t\t\targs.unshift(mark)\n\t\t\t\t}\n\t\t\t\tlog.__print(args, name)\n\t\t\t}\n\t\t}\n\t}, args => log.print.apply(log, args))\n}\n\nfunction empty() {}\n\nfunction bindLog(log) {\n\tconst {\n\t\tlevel,\n\t\tmethods\n\t} = log\n\tfor (let method in methods)\n\t\tlog[method] = level < currentLevel ? empty : methods[method]\n\treturn log\n}\n\nexport function setLogLevel(level) {\n\tconst log = logMap[level]\n\tassert(log, 'invalid log level: ' + level)\n\tlevel = log.level\n\tif (level !== currentLevel) {\n\t\tcurrentLevel = level\n\t\teach(logs, bindLog)\n\t}\n\n}\n\nexport function setLogConsole(console, applyArgs) {\n\teach(logs, log => {\n\t\tlog.__print = applyArgs ? (args, name) => {\n\t\t\tconsole[name].apply(console, args)\n\t\t} : (args, name) => console[name](args, name)\n\t})\n}\nexport function isLog(level) {\n\tconst log = logMap[level]\n\tassert(log, 'invalid log level: ' + level)\n\treturn log.level >= currentLevel\n}\n\nif (!console) console = { log() {} }\nif (!console.info) console.info = console.log\nsetLogConsole(console, 1)\n\nexport function sliceArgs(args, offset) {\n\tlet len = args.length\n\tconst arr = new Array(len - offset)\n\twhile (len-- > offset)\n\t\tarr[len - offset] = args[len]\n\treturn arr\n}\n\nexport function each(obj, cb) {\n\tif (obj instanceof Array) {\n\t\tvar i = obj.length\n\t\twhile (i--) cb(obj[i], i)\n\t} else {\n\t\tfor (let key in obj)\n\t\t\tcb(obj[key], key)\n\t}\n}\n\nexport function map(arr, cb) {\n\tlet i = arr.length,\n\t\tret = new Array(i)\n\twhile (i--)\n\t\tret[i] = cb(arr[i], i)\n\treturn ret\n}\n\nexport function reFirst(str, upper) {\n\treturn str.replace(/^[a-zA-Z]/, upper ? o => o.toUpperCase() : o => o.toLowerCase())\n}\n\nexport function arrayVal(val) {\n\treturn val instanceof Array ? val : [val]\n}\n"],"names":["toStr","Object","prototype","toString","conditions","UNDEF","NUL","INF","ARR","byteArray","shortArray","intArray","floatArray","arrayBuffer","typedArrays","concat","addTypeCon","each","reFirst","t","addValueCon","addCon","o","Infinity","call","a","b","name","values","notEq","notMakeNot","arguments","addEqCon","map","arrayVal","v","undefined","_addCon","args","thisCb","cb","length","n","apply","injects","conCode","params","i","push","join","Function","fn","_if","condition","callback","isNot","sliceArgs","assignCons","obj","callBy","len","exception","error","Error","assert","by","currentLevel","logs","logMap","debug","createLog","info","warn","level","log","print","methods","getLogMethods","bindLog","mark","msg","unshift","__print","empty","method","setLogLevel","setLogConsole","console","applyArgs","isLog","offset","arr","Array","key","ret","str","upper","replace","toUpperCase","toLowerCase","val"],"mappings":"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"}